name: Publish snapshots to maven

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 0.*

jobs:
  build-and-publish-snapshots:
    strategy:
      fail-fast: false
    if: github.repository == 'opensearch-project/opensearch-spark'
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Set up SBT
        uses: sbt/setup-sbt@v1

      - name: Publish to Local Maven
        run: |
          sbt standaloneCosmetic/publishM2
          sbt sparkPPLCosmetic/publishM2
          sbt sparkSqlApplicationCosmetic/publishM2

      - uses: actions/checkout@v3
        with:
          repository: 'opensearch-project/opensearch-build-libraries'
          path: 'build'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.PUBLISH_SNAPSHOTS_ROLE }}
          aws-region: us-east-1

      - name: generate sha and md5
        run: |
          for i in `find ${HOME}/.m2/repository/org/opensearch/ -name "*.pom" -type f`; do sha512sum "$i" | awk '{print $1}' >> "$i.sha512"; done
          for i in `find ${HOME}/.m2/repository/org/opensearch/ -name "*.jar" -type f`; do sha512sum "$i" | awk '{print $1}' >> "$i.sha512"; done
          for i in `find ${HOME}/.m2/repository/org/opensearch/ -name "*.pom" -type f`; do sha256sum "$i" | awk '{print $1}' >> "$i.sha256"; done
          for i in `find ${HOME}/.m2/repository/org/opensearch/ -name "*.jar" -type f`; do sha256sum "$i" | awk '{print $1}' >> "$i.sha256"; done

      - name: Get credentials and publish snapshots to maven
        run: |
          export SONATYPE_USERNAME=$(aws secretsmanager get-secret-value --secret-id maven-snapshots-username --query SecretString --output text)
          export SONATYPE_PASSWORD=$(aws secretsmanager get-secret-value --secret-id maven-snapshots-password --query SecretString --output text)
          echo "::add-mask::$SONATYPE_USERNAME"
          echo "::add-mask::$SONATYPE_PASSWORD"
          export SNAPSHOT_REPO_URL="https://aws.oss.sonatype.org/content/repositories/snapshots/"
          cd build/resources/publish/
          cp -a $HOME/.m2/repository/* ./
          ./publish-snapshot.sh ./

          echo "Snapshot publishing completed. Now uploading commit ID metadata..."

          # Define projects to update metadata for
          PROJECTS=("opensearch-spark-standalone_2.12" "opensearch-spark-ppl_2.12" "opensearch-spark-sql-application_2.12")
          VERSION="${{ steps.extract_version.outputs.version }}"
          COMMIT_ID="${{ steps.set_commit.outputs.commit_id }}"

          for PROJECT in "${PROJECTS[@]}"; do
            echo "Processing metadata for ${PROJECT}"

            TEMP_DIR=$(mktemp -d)

            # Create simple metadata file with only commit ID
            echo '<?xml version="1.0" encoding="UTF-8"?>' > "${TEMP_DIR}/metadata.xml"
            echo '<metadata>' >> "${TEMP_DIR}/metadata.xml"
            echo "  <commit_id>${COMMIT_ID}</commit_id>" >> "${TEMP_DIR}/metadata.xml"
            echo '</metadata>' >> "${TEMP_DIR}/metadata.xml"

            # Upload metadata
            METADATA_URL="https://aws.oss.sonatype.org/content/repositories/snapshots/org/opensearch/${PROJECT}/${VERSION}/metadata.xml"
            echo "Uploading metadata to ${METADATA_URL}"
            curl -v -u "${SONATYPE_USERNAME}:${SONATYPE_PASSWORD}" --upload-file "${TEMP_DIR}/metadata.xml" "${METADATA_URL}"

            # Clean up
            rm -rf "${TEMP_DIR}"
          done
